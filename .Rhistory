axis(2,cex.labels=2, hadj=3)
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01)
plot(data$nateduc~ data$wrkstat, xlab= "Work Force Status",  ylab="Attitude Toward Educational Spending",
main = "Attitude Toward Educational Spending vs. Work Force Status")
axis(2,cex.labels=2, hadj=4)
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01)
plot(data$nateduc~ data$wrkstat, xlab= "Work Force Status",  ylab="Attitude Toward Educational Spending",
main = "Attitude Toward Educational Spending vs. Work Force Status")
axis(2,cex.labels=2, hadj=5)
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01)
plot(data$nateduc~ data$wrkstat, xlab= "Work Force Status",  ylab="Attitude Toward Educational Spending",
main = "Attitude Toward Educational Spending vs. Work Force Status", cex.labels=2)
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01)
plot(data$nateduc~ data$wrkstat, xlab= "Work Force Status",  ylab="Attitude Toward Educational Spending",
main = "Attitude Toward Educational Spending vs. Work Force Status")
?par
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01)
plot(data$nateduc~ data$wrkstat, xlab= "Work Force Status",  ylab="Attitude Toward Educational Spending",
main = "Attitude Toward Educational Spending vs. Work Force Status", cex.sub=5)
class(datanateduc)
class(data$nateduc)
class(data$wrkstat
)
?plot
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01, las=2)
plot(data$nateduc~ data$wrkstat, xlab= "Work Force Status",  ylab="Attitude Toward Educational Spending",
main = "Attitude Toward Educational Spending vs. Work Force Status")
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01, las=2, cex.lab =.5)
plot(data$nateduc~ data$wrkstat, xlab= "Work Force Status",  ylab="Attitude Toward Educational Spending",
main = "Attitude Toward Educational Spending vs. Work Force Status")
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01, las=2)
plot(data$nateduc~ data$wrkstat, xlab= "Work Force Status",  ylab="Attitude Toward Educational Spending",
main = "Attitude Toward Educational Spending vs. Work Force Status")
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01, las=2)
plot(data$nateduc~ data$wrkstat, main = "Attitude Toward Educational Spending vs. Work Force Status")
par(mfrow=c(1,1), mar= c(7,5,4,2)+.01, las=2)
plot(data$nateduc~ data$wrkstat, main = "Attitude Toward Educational Spending vs. Work Force Status")
par(mfrow=c(1,1), mar= c(7,5,4,2)+.01, las=2)
plot(data$nateduc~ data$wrkstat, main = "Attitude Toward Educational Spending vs. Work Force Status", ylab="",xlab="")
par(mfrow=c(1,1), mar= c(7.5,5,4,2)+.01, las=2)
plot(data$nateduc~ data$wrkstat, main = "Attitude Toward Educational Spending vs. Work Force Status", ylab="",xlab="")
par(mfrow=c(1,1), mar= c(8,5,4,2)+.01, las=2)
plot(data$nateduc~ data$wrkstat, main = "Attitude Toward Educational Spending vs. Work Force Status", ylab="",xlab="")
par(mfrow=c(1,1), mar= c(8,5.2,4,2)+.01, las=2)
plot(data$nateduc~ data$wrkstat, main = "Attitude Toward Educational Spending vs. Work Force Status", ylab="",xlab="")
#working with nateduc (attitude toward ed. spending) & wrkstat (labor force status)
load(url("http://bit.ly/dasi_gss_data"))
#Labor force status
myvars <- c("caseid","year","wrkstat","nateduc")
workingdata <- gss[myvars]
#looking into NA
table(workingdata$nateduc,workingdata$wrkstat)
#contains all records with attitudes on national education as NA
temp <- subset(workingdata,is.na(nateduc))
#looking into NA's to make sure ok to just exclude them
table(temp$nateduc, temp$wrkstat,exclude= NULL )
table(temp$nateduc, temp$year, exclude = NULL)
#contains all records with valid attitudes on national education
data <- subset(workingdata, !is.na(nateduc))
table(data$natedu, data$wrkstat)
table( data$wrkstat)
#table relating working status and attitude on national education spending
#2-way frequency table
relation5 <- table(data$wrkstat,data$nateduc)
relation5
#see if I can get totals on
addmargins(relation5, margin = seq_along(dim(relation5)), FUN=sum, quiet=FALSE)
margin.table(relation5,1) # wrkstat frequencies (summed over nateduc)
margin.table(relation5,2) # nateduc frequencies (summed over wrkstat)
round(prop.table(relation5)*100,2) # cell percentages
round(prop.table(relation5, 1)*100,2) # row percentages
round(prop.table(relation5, 2)*100,2) # column percentages
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01)
mosaicplot(relation5, main="Workforce Status vs. Attitude on National Educational Spending",
xlab="Workforce Status", ylab="Attitude on Ed. Spending", las=2, cex.axis=0.5)
mosaicplot(relation5)
plot(data$nateduc)
plot(data$wrkstat, cex.lab = .5)
plot(data$nateduc~ data$wrkstat, xlab= "Work Force Status",  ylab="Attitude Toward Educational Spending",
main = "Attitude Toward Educational Spending vs. Work Force Status",las=2, cex.lab= .5)
par(mfrow=c(1,1), mar= c(8,5.2,4,2)+.01, las=2)
plot(data$nateduc~ data$wrkstat, main = "Attitude Toward Educational Spending vs. Work Force Status", ylab="",xlab="")
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01, las=1)
#summary statistics
#by(data$wrkstat, data$nateduc, summary)
by(data$nateduc, data$wrkstat, summary)
#inference section
#hypothesis test
source("http://bit.ly/dasi_inference")
inference(y=data$natedu, x=data$wrkstat, est="proportion",
type="ht", alternative="greater", method="theoretical")
table(data$wrkstat,data$year)
class(data$year)
data_year <- subset(data,!(year==2006))
table(data_year$wrkstat,data_year$year)
#working with nateduc (attitude toward ed. spending) & wrkstat (labor force status)
load(url("http://bit.ly/dasi_gss_data"))
#Labor force status
myvars <- c("caseid","year","wrkstat","nateduc")
workingdata <- gss[myvars]
#looking into NA
table(workingdata$nateduc,workingdata$wrkstat)
#contains all records with attitudes on national education as NA
temp <- subset(workingdata,is.na(nateduc))
#looking into NA's to make sure ok to just exclude them
table(temp$nateduc, temp$wrkstat,exclude= NULL )
table(temp$nateduc, temp$year, exclude = NULL)
#contains all records with valid attitudes on national education
data <- subset(workingdata, !is.na(nateduc))
table(data$natedu, data$wrkstat)
data <- subset(data, year == 2004)
table(data$natedu, data$wrkstat)
data <- subset(data, year != 2004)
#working with nateduc (attitude toward ed. spending) & wrkstat (labor force status)
load(url("http://bit.ly/dasi_gss_data"))
#Labor force status
myvars <- c("caseid","year","wrkstat","nateduc")
workingdata <- gss[myvars]
#looking into NA
table(workingdata$nateduc,workingdata$wrkstat)
#contains all records with attitudes on national education as NA
temp <- subset(workingdata,is.na(nateduc))
#looking into NA's to make sure ok to just exclude them
table(temp$nateduc, temp$wrkstat,exclude= NULL )
table(temp$nateduc, temp$year, exclude = NULL)
#contains all records with valid attitudes on national education
data <- subset(workingdata, !is.na(nateduc))
data <- subset(data, year != 2006)
table(data$natedu, data$wrkstat)
table(data$natedu, data$wrkstat)
table( data$wrkstat)
#table relating working status and attitude on national education spending
#2-way frequency table
relation5 <- table(data$wrkstat,data$nateduc)
relation5
#see if I can get totals on
addmargins(relation5, margin = seq_along(dim(relation5)), FUN=sum, quiet=FALSE)
margin.table(relation5,1) # wrkstat frequencies (summed over nateduc)
margin.table(relation5,2) # nateduc frequencies (summed over wrkstat)
round(prop.table(relation5)*100,2) # cell percentages
round(prop.table(relation5, 1)*100,2) # row percentages
round(prop.table(relation5, 2)*100,2) # column percentages
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01)
mosaicplot(relation5, main="Workforce Status vs. Attitude on National Educational Spending",
xlab="Workforce Status", ylab="Attitude on Ed. Spending", las=2, cex.axis=0.5)
mosaicplot(relation5)
plot(data$nateduc)
plot(data$wrkstat, cex.lab = .5)
plot(data$nateduc~ data$wrkstat, xlab= "Work Force Status",  ylab="Attitude Toward Educational Spending",
main = "Attitude Toward Educational Spending vs. Work Force Status",las=2, cex.lab= .5)
par(mfrow=c(1,1), mar= c(8,5.2,4,2)+.01, las=2)
plot(data$nateduc~ data$wrkstat, main = "Attitude Toward Educational Spending vs. Work Force Status", ylab="",xlab="")
par(mfrow=c(1,1), mar= c(5,4,4,2)+.01, las=1)
#summary statistics
#by(data$wrkstat, data$nateduc, summary)
by(data$nateduc, data$wrkstat, summary)
#inference section
#hypothesis test
source("http://bit.ly/dasi_inference")
inference(y=data$natedu, x=data$wrkstat, est="proportion",
type="ht", alternative="greater", method="theoretical")
load(url("http://www.openintro.org/stat/data/mlb11.RData"))
head(mlbl1,n=5)
View(mlb11)
View(mlb11)
head(mlb11,n=5)
plot(mlb11$runs, mlb11$at_bats)
plot(mlb11$at_bats, mlb11$runs) #explanatory goes on x-axis
cor(mlb11$runs, mlb11$at_bats)
abline(mlb11$at_bats, mlb11$runs)
abline(mlb11$at_bats~ mlb11$runs)
line(mlb11$at_bats~ mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
m1 <- lm(runs ~   at_bats, data = mlb11)
summary(m1)
head(mlb11,n=2)
m1 <- lm(runs ~   homeruns, data = mlb11)
summary(m1)
plot(mlb11$runs ~  mlb11$at_bats)
abline(m1)
m1 <- lm(runs ~   at_bats, data = mlb11)
plot(mlb11$runs ~  mlb11$at_bats)
abline(m1)
View(mlb11)
View(mlb11)
temp <- subset(mlb11,at_bats == 5579)
temp
plot(m1$residuals ~  mlb11$at_bats)
abline(h = 0, lty = 3) # adds a horizontal dashed line at y = 0
hist(m1$residuals)
qqnorm(m1$residuals)
qqline(m1$residuals) # adds diagonal line to the normal prob plot
cor(mlb11$runs, mlb11$at_bats)
plot(mlb11$hits, mlb11$runs) #explanatory goes on x-axis
cor(mlb11$runs, mlb11$hits)
m1 <- lm(runs ~   hits, data = mlb11)
summary(m1)
plot(mlb11$runs ~  mlb11$hits)
abline(m1)
# Linearity:
plot(m1$residuals ~  mlb11$hits)
abline(h = 0, lty = 3) # adds a horizontal dashed line at y = 0
#Nearly normal residuals: To check this condition, we can look at a histogram
hist(m1$residuals)
#or a normal probability plot of the residuals.
qqnorm(m1$residuals)
qqline(m1$residuals) # adds diagonal line to the normal prob plot
plot(mlb11$wins, mlb11$runs) #explanatory goes on x-axis
cor(mlb11$runs, mlb11$wins)
m1 <- lm(runs ~ wins, data = mlb11)
summary(m1)
plot(mlb11$runs ~  mlb11$wins)
abline(m1)
plot(m1$residuals ~  mlb11$wins)
abline(h = 0, lty = 3) # adds a horizontal dashed line at y = 0
#Nearly normal residuals: To check this condition, we can look at a histogram
hist(m1$residuals)
#or a normal probability plot of the residuals.
qqnorm(m1$residuals)
qqline(m1$residuals) # adds diagonal line to the normal prob plot
plot(mlb11$at_bats, mlb11$runs) #explanatory goes on x-axis
cor(mlb11$runs, mlb11$at_bats)
m1 <- lm(runs ~   at_bats, data = mlb11)
summary(m1)
plot(mlb11$bat_avg, mlb11$runs) #explanatory goes on x-axis
cor(mlb11$runs, mlb11$bat_avg)
m1 <- lm(runs ~ bat_avg, data = mlb11)
summary(m1)
plot(mlb11$runs ~  mlb11$bat_avg)
abline(m1)
# Linearity:
plot(m1$residuals ~  mlb11$bat_avg)
abline(h = 0, lty = 3) # adds a horizontal dashed line at y = 0
#Nearly normal residuals: To check this condition, we can look at a histogram
hist(m1$residuals)
#or a normal probability plot of the residuals.
qqnorm(m1$residuals)
qqline(m1$residuals) # adds diagonal line to the normal prob plot
plot(mlb11$hits, mlb11$runs) #explanatory goes on x-axis
cor(mlb11$runs, mlb11$hits)
m1 <- lm(runs ~   hits, data = mlb11)
summary(m1)
plot(mlb11$runs ~  mlb11$hits)
abline(m1)
plot(mlb11$new_obs, mlb11$runs) #explanatory goes on x-axis
cor(mlb11$runs, mlb11$new_obs)
plot(mlb11$runs ~  mlb11$new_obs)
abline(m1)
plot(mlb11$new_obs, mlb11$runs) #explanatory goes on x-axis
cor(mlb11$runs, mlb11$new_obs)
m1 <- lm(runs ~ new_obs, data = mlb11)
summary(m1)
plot(mlb11$runs ~  mlb11$new_obs)
abline(m1)
# Linearity:
plot(m1$residuals ~  mlb11$new_obs)
abline(h = 0, lty = 3) # adds a horizontal dashed line at y = 0
#Nearly normal residuals: To check this condition, we can look at a histogram
hist(m1$residuals)
#or a normal probability plot of the residuals.
qqnorm(m1$residuals)
qqline(m1$residuals) # adds diagonal line to the normal prob plot
plot(mlb11$new_slug, mlb11$runs) #explanatory goes on x-axis
cor(mlb11$runs, mlb11$new_slug)
m1 <- lm(runs ~ new_slug, data = mlb11)
summary(m1)
plot(mlb11$runs ~  mlb11$new_slug)
abline(m1)
# Linearity:
plot(m1$residuals ~  mlb11$new_slug)
abline(h = 0, lty = 3) # adds a horizontal dashed line at y = 0
#Nearly normal residuals: To check this condition, we can look at a histogram
hist(m1$residuals)
#or a normal probability plot of the residuals.
qqnorm(m1$residuals)
qqline(m1$residuals) # adds diagonal line to the normal prob plot
plot(mlb11$new_onbase, mlb11$runs) #explanatory goes on x-axis
cor(mlb11$runs, mlb11$new_onbase)
m1 <- lm(runs ~ new_onbase, data = mlb11)
summary(m1)
plot(mlb11$runs ~  mlb11$new_onbase)
abline(m1)
# Linearity:
plot(m1$residuals ~  mlb11$new_onbase)
abline(h = 0, lty = 3) # adds a horizontal dashed line at y = 0
#Nearly normal residuals: To check this condition, we can look at a histogram
hist(m1$residuals)
#or a normal probability plot of the residuals.
qqnorm(m1$residuals)
qqline(m1$residuals) # adds diagonal line to the normal prob plot
#load data
library (DAAG)
data(allbacks)
install.packages("DAAG")
library (DAAG)
data(allbacks)
#fit model
book_mlr = lm(weight ~ volume + cover, data= allbacks)
summary(book_mlr)
states = read.csv("http://bit.ly/dasi_states")
pov_slr =lm(poverty ~ female_house, data=states)
summary(pov_slr)
pov_mlr =lm(poverty ~ female_house + white, data=states)
summary(pov_mlr)
anova(pov_mlr)
load(url("http://www.openintro.org/stat/data/evals.RData"))
head(evals,n=5)
plot(evals$score)
hist(evals$score)
summary(evals$score)
boxplot(evals$score)
table(evals$score)
plot(evals$score ~   evals$bty_avg)
?jitter()
plot(evals$score ~   jitter(evals$bty_avg)
)
plot(evals$score ~  evals$bty_avg)
plot(jitter(evals$score) ~   evals$bty_avg)
plot(evals$score ~   jitter(evals$bty_avg))
plot(jitter(evals$score) ~   evals$bty_avg)
m_bty = lm(score ~ bty_avg, data=evals)
abline(m_bty)
plot(evals$score ~   jitter(evals$bty_avg))
abline(m_bty)
?abline
?lm
summary(m_bty)
plot(evals$residuals~evals$bty_avg)
plot(m_bty$residuals~evals$bty_avg)
hist(m_bty$residuals)
qqnorm(m_bty$residuals)
qqline(m_bty$residuals)
plot(m_bty$residuals ~ m_bty$fitted)
plot(abs(m_bty$residuals)~m_bty$fitted)
plot(m_bty$residuals)
plot(evals$bty_avg ~  evals$bty_f1lower)
cor(evals$bty_avg, evals$bty_f1lower)
plot(evals[, 13:19])
m_bty_gen <- lm(score ~ bty_avg + gender, data = evals)
summary(m_bty_gen)
multiLines(m_bty_gen)
m_bty_rank <- lm(score ~ bty_avg + rank, data= evals)
summary(m_bty_rank)
multiLines(m_bty_rank)
m_full <- lm(score ~
rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m_full)
m_full <- lm(score ~
rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level +  cls_credits + bty_avg, data = evals)
summary(m_full)
m1 <- lm(score ~
ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
m2 = lm(score ~
rank + gender + language + age + cls_perc_eval +
cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m2)$adj.r.squared
#w/o bty_avg
m3 = lm(score ~
rank + gender + language + age + cls_perc_eval + ethnicity +
cls_students + cls_level + cls_profs + cls_credits , data = evals)
summary(m3)$adj.r.squared
#w/o cls_profs
m4 = lm(score ~
rank + gender + language + age + cls_perc_eval + ethnicity +
cls_students + cls_level + cls_credits+ bty_avg , data = evals)
summary(m4)$adj.r.squared
#w/o cls_students
m5 = lm(score ~
rank + gender + language + age + cls_perc_eval + ethnicity +
cls_level + cls_profs  + cls_credits+ bty_avg , data = evals)
summary(m5)$adj.r.squared
qt(.025.df=50)
qt(0.025,df=50)
qt(0.05,df=5)
qt(0.01,df=20)
qt(0.025,df=28)
qt(0.005,df=11)
pchisq(1.4956,2, lower.tail=false)
pchisq(1.4956,2, lower.tail=FALSE)
pchisq(2.32,2, lower.tail=FALSE)
pchisq(11.46,2, lower.tail=FALSE)
sum(dbinom(4:20,20,0.1))
dbinom(1,5,0.2)
dbinom(2,10,0.1)
dbinom(2,10,0.2)
dbinom(3,15,0.1)
dbinom(3,15,0.2)
dbinom(4,20,0.1)
dbinom(4,20,0.2)
dbinom(92,100,0.9)
sum(dbinom(50:160,160,0.28))
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
cd  c:/Users/Non-corrupt user/Desktop/Suzy/DataScience/R Programming/
cd /Users/Non-corrupt user/Desktop/Suzy/DataScience R Programming/
cd Users/Non-corrupt user/Desktop/
cd  "c:/Users/Non-corrupt user/Desktop/Suzy/DataScience/R Programming/"
q()
add2 <- function(x,y){
x+y
}
add2(8,9)
above <-function(x,n){
use <- x> n
x[use]
}
x <-1:20
above(x,12)
above <-function(x,n=10){
use <- x> n
x[use]
}
above(x)
#calc the col mean for a matrix
#y is a matrix
columnmean <-function(y){
nc <- ncol(y) ##calc no. cols
means <- numeric(nc) ##empty vector for us to fill
for(i in 1:nc){
means[i]<-mean(y[,i])
}
means ## last expression in function is what gets returned
}
columnmeans(airquality)
columnmean(airquality)
#calc the col mean for a matrix
#y is a matrix
columnmean <-function(y,removeNA=TRUE){
nc <- ncol(y) ##calc no. cols
means <- numeric(nc) ##empty vector for us to fill
for(i in 1:nc){
means[i]<-mean(y[,i],na.rm=removeNA)
}
means ## last expression in function is what gets returned
}
columnmean(airquality)
cube <-function(x,n){
x^3
}
cube(3)
x<-1:10
if(x>5){
x<-0
}
f<-function(x){
g<-function(y){
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
x<-5
y<-if(x<3){
NA
}
else{
10
}
x<-5
y<-if(x<3){ NA}
else { 10}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <-rnorm(10)
X
x <-rnorm(10)
X
x<-rnorm(10)
x
setwd("/Users/Non-corrupt user/Desktop/Suzy/DataScience/R Programming/ProgrammingAssignment2/")
set.seed(1)
rpois(5,2)
